name: Python package

on:
  push:
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel
          pip install -r requirements.txt

      - name: Build the package
        run: |
          python setup.py sdist bdist_wheel

      - name: Install the package
        run: |
          pip install dist/*.whl

      - name: Run tests
        run: |
          pip install pytest
          pytest

      - name: Upload package artifact
        uses: actions/upload-artifact@v2
        with:
          name: db-weights-wheel
          path: dist/*.whl

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download package artifact
        uses: actions/download-artifact@v2
        with:
          name: db-weights-wheel
          path: dist

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/*.whl
          asset_name: db_weights-${{ github.ref }}.whl
          asset_content_type: application/zip

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          python -m pip install --upgrade twine
          twine upload dist/*
